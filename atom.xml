<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ColinWangBlog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-15T15:16:59.645Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Colin Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/03/13/hello-world/"/>
    <id>http://yoursite.com/2019/03/13/hello-world/</id>
    <published>2019-03-13T02:52:54.015Z</published>
    <updated>2019-03-15T15:16:59.645Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      hexo指导
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git小记(1)</title>
    <link href="http://yoursite.com/2018/06/24/git%E5%B0%8F%E8%AE%B0(1)/"/>
    <id>http://yoursite.com/2018/06/24/git小记(1)/</id>
    <published>2018-06-24T13:46:07.000Z</published>
    <updated>2019-03-15T15:17:23.683Z</updated>
    
    <content type="html"><![CDATA[<p>##git init</p><ul><li>该命令能初始化本地仓库,在当前目录新建一个git代码库.<br><img src="https://upload-images.jianshu.io/upload_images/7017681-649e469ff7c0e457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="如图"></li></ul><hr><p>##git add</p><ul><li>git add文件路径,用来将变动加到暂存区,添加指定文件到暂存区<br><img src="https://upload-images.jianshu.io/upload_images/7017681-56b35f16c404f841.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="css目录下的所有文件都被提交到暂存区了"></li></ul><hr><p>##git commit -v</p><ul><li>提交时显示所有diff信息,diff是Unix系统的一个很重要的工具程序。它用来比较两个文本文件的差异，是代码版本管理的基石之一。</li></ul>]]></content>
    
    <summary type="html">
    
      git的一点笔记
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>命令行小记(1)</title>
    <link href="http://yoursite.com/2018/06/23/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B0%8F%E8%AE%B0(1)/"/>
    <id>http://yoursite.com/2018/06/23/命令行小记(1)/</id>
    <published>2018-06-23T14:07:03.000Z</published>
    <updated>2019-03-15T15:18:02.467Z</updated>
    
    <content type="html"><![CDATA[<p>##ls用法</p><ul><li>输入ls显示当前目录下的所有文件和路径,直接输入<code>ls</code></li><li>ls某个文件列表可以显示该目录下的所有文件和路径<code>ls demo-1</code></li></ul><hr><p>##cat用法</p><ul><li>cat命令由第一行显示档案内容.<code>cat 1.txt</code></li></ul><hr><p>##mv用法</p><ul><li>mv源路径 目标路径,可以让该文件移动到目标路径下.</li><li>mv可以重命名或者改变文件类型,比如<code>mv 1.txt 1.md</code>. </li></ul><hr><p>##touch用法</p><ul><li>touch可以创建一个文件,但不能创建目录,也可以改变文件的更新时间.直接输入<code>touch 1.txt</code></li></ul><hr><p>###explainshell.com<br>该网站可以解释任何命令,输入任意命令,能解释命令里各个字母代表的意思.</p>]]></content>
    
    <summary type="html">
    
      rt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从输出URL到页面展示发生了什么</title>
    <link href="http://yoursite.com/2017/07/22/%E4%BB%8E%E8%BE%93%E5%87%BAURL%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%A4%BA%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/"/>
    <id>http://yoursite.com/2017/07/22/从输出URL到页面展示发生了什么/</id>
    <published>2017-07-22T08:22:48.000Z</published>
    <updated>2019-03-15T15:17:51.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="URL是什么"><a href="#URL是什么" class="headerlink" title="URL是什么"></a>URL是什么</h2><ul><li><strong>URL</strong>是统一资源定位符（Uniform Resource Locator）的简称。统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。</li><li>模式/协议（scheme）：它告诉浏览器如何处理将要打开的文件。最常用的模式是超文本传输协议（Hypertext Transfer Protocol，缩写为HTTP），这个协议可以用来访问网络。</li></ul><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p><strong>IP</strong>地址是什么：IP地址被用来给Internet上的电脑一个编号。大家日常见到的情况是每台联网的PC上都需要有IP地址，才能正常通信。我们可以把“个人电脑”比作“一台电话”，那么“IP地址”就相当于“电话号码”。<br><strong>DNS</strong>是什么：DNS（Domain Name System，域名系统），因特网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。通过主机名，最终得到该主机名对应的IP地址的过程叫做域名解析。</p><ul><li>浏览器缓存 – 浏览器会缓存DNS记录一段时间。</li><li>系统缓存 - 从 Hosts 文件查找是否有该域名和对应 IP。</li><li>路由器缓存 – 一般路由器也会缓存域名信息。</li><li>ISP DNS 缓存 – 比如到电信的 DNS 上查找缓存。</li><li>如果都没有找到，则向根域名服务器查找域名对应 IP，根域名服务器把请求转发到下一级，直到找到 IP。</li></ul><h2 id="服务器处理"><a href="#服务器处理" class="headerlink" title="服务器处理"></a>服务器处理</h2><p>服务器是一台安装系统的机器，常见的系统如Linux、windows server 2012。系统里安装的处理请求的应用叫 Web server。<br>Web服务器可以解析(handles)HTTP协议。当Web服务器接收到一个HTTP请求(request)，会返回一个HTTP响应(response)，例如送回一个HTML页面。为了处理一个请求(request)，Web服务器可以响应(response)一个静态页面或图片，进行页面跳转(redirect)，或者把动态响应(dynamic response)的产生委托(delegate)给一些其它的程序例如CGI脚本，JSP(JavaServer Pages)脚本，servlets，ASP(Active Server Pages)脚本，服务器端(server-side)JavaScript，或者一些其它的服务器端(server-side)技术。无论它们(译者注：脚本)的目的如何，这些服务器端(server-side)的程序通常产生一个HTML的响应(response)来让浏览器可以浏览。</p><h2 id="网站处理流程"><a href="#网站处理流程" class="headerlink" title="网站处理流程"></a>网站处理流程</h2><p><img src="http://upload-images.jianshu.io/upload_images/7017681-b013a59beffbf8b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>##浏览器处理</p><ul><li>HTML字符串被浏览器接受后被一句句读取解析。</li><li>解析到link 标签后重新发送请求获取css。</li><li>解析到 script标签后发送请求获取 js，并执行代码。</li><li>解析到img 标签后发送请求获取图片资源。</li></ul><p>##绘制网页<br>浏览器根据 HTML 和 CSS 计算得到渲染树，绘制到屏幕上js 会被执行。</p>]]></content>
    
    <summary type="html">
    
      rt
    
    </summary>
    
    
  </entry>
  
</feed>
